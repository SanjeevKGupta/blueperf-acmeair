#
# Makefile : acmeair
#

# Check all necessary environment variables
-include ../../env.var.app.cmd.mk
-include ../../env.var.app.image.mk

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

build: 
	@echo ""
	@echo "\033[1;30mBuilding image ${DOCKER_IMAGE}_$(ARCH):${SERVICE_VERSION} \033[0m"
	@cd ../../../../../${IMAGE_NAME} ; \
	mvn clean package; \
	docker build --platform linux/${ARCH} --pull -t ${DOCKER_IMAGE}_$(ARCH):${SERVICE_VERSION} .

push: 
	@echo ""
	@echo "\033[1;30mLogin into container registry ${CR_HOST} \033[0m"
	@echo "${CR_APP_API_KEY_RW_PUSH}" | docker login ${CR_HOST} -u ${CR_HOST_USERNAME} --password-stdin

	@echo ""
	@echo "\033[1;30mPushing image $(DOCKER_IMAGE)_$(ARCH):$(SERVICE_VERSION) \033[0m"
	@docker push $(DOCKER_IMAGE)_$(ARCH):$(SERVICE_VERSION)

check_var_namespace:
	$(call cmd_var_check,NAMESPACE_GRP,as make <target> NAMESPACE_GRP=<namespace-grp>)
	@echo ""
	@echo "NAMESPACE_GRP: ${NAMESPACE_GRP}"

create_namespace: check_var_namespace
	@echo "Creating namespace: ${NAMESPACE_GRP}-${K_NS_SUFFIX}"
	$(shell kubectl create namespace ${NAMESPACE_GRP}-${K_NS_SUFFIX} > /dev/null 2>&1)

create_image_pull_secret: create_namespace
	$(shell kubectl create secret docker-registry ${NAMESPACE_GRP}-${K_NS_SUFFIX}-image-pull-secret -n ${NAMESPACE_GRP}-${K_NS_SUFFIX} --docker-server=${CR_HOST} --docker-username=${CR_HOST_USERNAME} --docker-password=${CR_APP_API_KEY_RO_PULL} --docker-email="" > /dev/null 2>&1)

apply_kube: create_image_pull_secret
	@echo ""
	@echo "\033[1;30mDeleting existing deployment ${K_DEPLOY_NAME} \033[0m"
	$(shell kubectl delete deploy ${K_DEPLOY_NAME} -n ${NAMESPACE_GRP}-${K_NS_SUFFIX} > /dev/null 2>&1)
	$(shell kubectl delete service ${K_SERVICE_NAME} -n ${NAMESPACE_GRP}-${K_NS_SUFFIX} > /dev/null 2>&1)

	@echo ""
	@echo "\033[1;30mCreating new deployment in namespace ${NAMESPACE_GRP}-${K_NS_SUFFIX} \033[0m"
	kubectl apply -n ${NAMESPACE_GRP}-${K_NS_SUFFIX} -f ../../../../../${IMAGE_NAME}/manifests

	@echo ""
	@echo "\033[1;30mpatching deployment in namespace ${NAMESPACE_GRP}-${K_NS_SUFFIX} \033[0m"
	envsubst < ./kube/deploy-patch.yaml.tmpl > ./kube/deploy-patch.yaml | kubectl patch deployment ${K_DEPLOY_NAME} -n ${NAMESPACE_GRP}-${K_NS_SUFFIX} --patch-file ./kube/deploy-patch.yaml

# This imports the variables from hzn.json
.hzn.json.tmp.mk: hzn/hzn.json
	@ hzn util configconv -f $< > $@
